!(function (e, t) {
	if ('object' == typeof exports && 'object' == typeof module)
		module.exports = t();
	else if ('function' == typeof define && define.amd) define([], t);
	else {
		var n = t();
		for (var i in n) ('object' == typeof exports ? exports : e)[i] = n[i];
	}
})(this, function () {
	return (function (e) {
		var t = {};
		function n(i) {
			if (t[i]) return t[i].exports;
			var r = (t[i] = { i: i, l: !1, exports: {} });
			return e[i].call(r.exports, r, r.exports, n), (r.l = !0), r.exports;
		}
		return (
			(n.m = e),
			(n.c = t),
			(n.d = function (e, t, i) {
				n.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: i });
			}),
			(n.r = function (e) {
				'undefined' != typeof Symbol &&
					Symbol.toStringTag &&
					Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }),
					Object.defineProperty(e, '__esModule', { value: !0 });
			}),
			(n.t = function (e, t) {
				if ((1 & t && (e = n(e)), 8 & t)) return e;
				if (4 & t && 'object' == typeof e && e && e.__esModule) return e;
				var i = Object.create(null);
				if (
					(n.r(i),
					Object.defineProperty(i, 'default', { enumerable: !0, value: e }),
					2 & t && 'string' != typeof e)
				)
					for (var r in e)
						n.d(
							i,
							r,
							function (t) {
								return e[t];
							}.bind(null, r)
						);
				return i;
			}),
			(n.n = function (e) {
				var t =
					e && e.__esModule
						? function () {
								return e.default;
						  }
						: function () {
								return e;
						  };
				return n.d(t, 'a', t), t;
			}),
			(n.o = function (e, t) {
				return Object.prototype.hasOwnProperty.call(e, t);
			}),
			(n.p = ''),
			n((n.s = 2))
		);
	})([
		function (e, t) {
			e.exports = require('react');
		},
		function (e, t, n) {
			e.exports = n(3)();
		},
		function (e, t, n) {
			'use strict';
			n.r(t),
				n.d(t, 'default', function () {
					return h;
				});
			var i = n(0),
				r = n.n(i),
				o = n(1),
				s = n.n(o);
			function a(e) {
				return (a =
					'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
						? function (e) {
								return typeof e;
						  }
						: function (e) {
								return e &&
									'function' == typeof Symbol &&
									e.constructor === Symbol &&
									e !== Symbol.prototype
									? 'symbol'
									: typeof e;
						  })(e);
			}
			function l(e, t) {
				for (var n = 0; n < t.length; n++) {
					var i = t[n];
					(i.enumerable = i.enumerable || !1),
						(i.configurable = !0),
						'value' in i && (i.writable = !0),
						Object.defineProperty(e, i.key, i);
				}
			}
			function c(e, t) {
				return (c = Object.setPrototypeOf
					? Object.setPrototypeOf.bind()
					: function (e, t) {
							return (e.__proto__ = t), e;
					  })(e, t);
			}
			function u(e) {
				var t = (function () {
					if ('undefined' == typeof Reflect || !Reflect.construct) return !1;
					if (Reflect.construct.sham) return !1;
					if ('function' == typeof Proxy) return !0;
					try {
						return (
							Boolean.prototype.valueOf.call(
								Reflect.construct(Boolean, [], function () {})
							),
							!0
						);
					} catch (e) {
						return !1;
					}
				})();
				return function () {
					var n,
						i = d(e);
					if (t) {
						var r = d(this).constructor;
						n = Reflect.construct(i, arguments, r);
					} else n = i.apply(this, arguments);
					return p(this, n);
				};
			}
			function p(e, t) {
				if (t && ('object' === a(t) || 'function' == typeof t)) return t;
				if (void 0 !== t)
					throw new TypeError(
						'Derived constructors may only return object or undefined'
					);
				return f(e);
			}
			function f(e) {
				if (void 0 === e)
					throw new ReferenceError(
						"this hasn't been initialised - super() hasn't been called"
					);
				return e;
			}
			function d(e) {
				return (d = Object.setPrototypeOf
					? Object.getPrototypeOf.bind()
					: function (e) {
							return e.__proto__ || Object.getPrototypeOf(e);
					  })(e);
			}
			var h = (function (e) {
				!(function (e, t) {
					if ('function' != typeof t && null !== t)
						throw new TypeError(
							'Super expression must either be null or a function'
						);
					(e.prototype = Object.create(t && t.prototype, {
						constructor: { value: e, writable: !0, configurable: !0 },
					})),
						Object.defineProperty(e, 'prototype', { writable: !1 }),
						t && c(e, t);
				})(s, e);
				var t,
					n,
					i,
					o = u(s);
				function s(e) {
					var t, n, i, r;
					return (
						(function (e, t) {
							if (!(e instanceof t))
								throw new TypeError('Cannot call a class as a function');
						})(this, s),
						(t = o.call(this, e)),
						(n = f(t)),
						(r = function (e) {
							return e.replace(/(?:\r\n|\r|\n)/g, '<br />');
						}),
						(i = 'formatText') in n
							? Object.defineProperty(n, i, {
									value: r,
									enumerable: !0,
									configurable: !0,
									writable: !0,
							  })
							: (n[i] = r),
						(t.element = null),
						(t.original = e.text),
						(t.watch = !0),
						(t.lineHeight = 0),
						(t.start = 0),
						(t.middle = 0),
						(t.end = 0),
						(t.uuid = e.id),
						(t.state = {
							expanded: !0,
							noClamp: !1,
							text: e.text.substring(0, 20),
						}),
						(t.ssr = 'undefined' == typeof window),
						(t.action = t.action.bind(f(t))),
						(t.clickHandler = t.clickHandler.bind(f(t))),
						t.ssr
							? (t.state.text = e.text.substring(0, 20))
							: (t.debounced = t.debounce(t.action, e.delay)),
						t
					);
				}
				return (
					(t = s),
					(n = [
						{
							key: 'componentDidMount',
							value: function () {
								this.props.text &&
									!this.ssr &&
									((this.lineHeight = this.element.clientHeight + 1),
									this.clampLines(),
									this.watch &&
										window.addEventListener('resize', this.debounced));
							},
						},
						{
							key: 'componentWillUnmount',
							value: function () {
								this.ssr ||
									window.removeEventListener('resize', this.debounced);
							},
						},
						{
							key: 'componentDidUpdate',
							value: function (e) {
								e.text !== this.props.text &&
									((this.original = this.props.text), this.clampLines());
							},
						},
						{
							key: 'debounce',
							value: function (e, t, n) {
								var i,
									r = arguments,
									o = this;
								return function () {
									var s = o,
										a = r,
										l = n && !i;
									clearTimeout(i),
										(i = setTimeout(function () {
											(i = null), n || e.apply(s, a);
										}, t)),
										l && e.apply(s, a);
								};
							},
						},
						{
							key: 'action',
							value: function () {
								this.watch &&
									(this.setState({ noClamp: !1 }),
									this.clampLines(),
									this.setState({ expanded: !this.state.expanded }));
							},
						},
						{
							key: 'clampLines',
							value: function () {
								if (this.element) {
									this.setState({ text: '' });
									var e = this.lineHeight * this.props.lines + 1;
									for (
										this.start = 0,
											this.middle = 0,
											this.end = this.original.length;
										this.start <= this.end;

									) {
										if (
											((this.middle = Math.floor((this.start + this.end) / 2)),
											(this.element.innerText = this.original.slice(
												0,
												this.middle
											)),
											this.middle === this.original.length)
										)
											return void this.setState({
												text: this.original,
												noClamp: !0,
											});
										this.moveMarkers(e);
									}
									(this.element.innerText =
										this.original.slice(0, this.middle - 5) +
										this.getEllipsis()),
										this.setState({
											text:
												this.original.slice(0, this.middle - 5) +
												this.getEllipsis(),
										});
								}
							},
						},
						{
							key: 'moveMarkers',
							value: function (e) {
								this.element.clientHeight <= e
									? (this.start = this.middle + 1)
									: (this.end = this.middle - 1);
							},
						},
						{
							key: 'getClassName',
							value: function () {
								var e = this.props.className || '';
								return 'clamp-lines '.concat(e);
							},
						},
						{
							key: 'getEllipsis',
							value: function () {
								return this.watch && !this.state.noClamp
									? this.props.ellipsis
									: '';
							},
						},
						{
							key: 'getButton',
							value: function () {
								if (!this.state.noClamp && this.props.buttons) {
									var e = this.watch
										? this.props.moreText
										: this.props.lessText;
									return r.a.createElement(
										r.a.Fragment,
										null,
										this.props.moreNode && this.props.lessNode
											? r.a.createElement(
													r.a.Fragment,
													null,
													this.state.expanded
														? r.a.createElement(
																'div',
																{ onClick: this.clickHandler },
																this.props.moreNode
														  )
														: r.a.createElement(
																'div',
																{ onClick: this.clickHandler },
																this.props.lessNode
														  )
											  )
											: r.a.createElement(
													'button',
													{
														className: 'clamp-lines__button',
														onClick: this.clickHandler,
														'aria-controls': 'clamped-content-'.concat(
															this.uuid
														),
														'aria-expanded': !this.state.expanded,
													},
													e
											  )
									);
								}
							},
						},
						{
							key: 'clickHandler',
							value: function (e) {
								var t = this.props.stopPropagation;
								e.preventDefault(),
									t && e.stopPropagation(),
									(this.watch = !this.watch),
									this.watch
										? this.clampLines()
										: this.setState({ text: this.original }),
									this.setState({ expanded: !this.state.expanded });
							},
						},
						{
							key: 'render',
							value: function () {
								var e = this;
								if (!this.props.text) return null;
								var t =
									'html' == this.props.type
										? r.a.createElement(this.props.innerElement, {
												ref: function (t) {
													e.element = t;
												},
												id: 'clamped-content-'.concat(this.uuid),
												'aria-hidden': this.state.expanded,
												dangerouslySetInnerHTML: { __html: this.state.text },
										  })
										: r.a.createElement(
												this.props.innerElement,
												{
													ref: function (t) {
														e.element = t;
													},
													id: 'clamped-content-'.concat(this.uuid),
													'aria-hidden': this.state.expanded,
												},
												this.formatText(this.state.text)
										  );
								return r.a.createElement(
									'div',
									{ className: this.getClassName() },
									t,
									this.getButton()
								);
							},
						},
					]) && l(t.prototype, n),
					i && l(t, i),
					Object.defineProperty(t, 'prototype', { writable: !1 }),
					s
				);
			})(i.PureComponent);
			(h.propTypes = {
				text: s.a.string.isRequired,
				id: s.a.string.isRequired,
				type: 0,
				lines: s.a.number,
				ellipsis: s.a.string,
				buttons: s.a.bool,
				moreText: s.a.string,
				lessText: s.a.string,
				moreNode: r.a.ReactNode,
				lessNode: r.a.ReactNode,
				className: s.a.string,
				delay: s.a.number,
				stopPropagation: s.a.bool,
				innerElement: s.a.string,
			}),
				(h.defaultProps = {
					lines: 3,
					ellipsis: '...',
					buttons: !0,
					moreText: 'Read more',
					lessText: 'Read less',
					delay: 300,
					innerElement: 'div',
				});
		},
		function (e, t, n) {
			'use strict';
			var i = n(4);
			function r() {}
			function o() {}
			(o.resetWarningCache = r),
				(e.exports = function () {
					function e(e, t, n, r, o, s) {
						if (s !== i) {
							var a = new Error(
								'Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types'
							);
							throw ((a.name = 'Invariant Violation'), a);
						}
					}
					function t() {
						return e;
					}
					e.isRequired = e;
					var n = {
						array: e,
						bigint: e,
						bool: e,
						func: e,
						number: e,
						object: e,
						string: e,
						symbol: e,
						any: e,
						arrayOf: t,
						element: e,
						elementType: e,
						instanceOf: t,
						node: e,
						objectOf: t,
						oneOf: t,
						oneOfType: t,
						shape: t,
						exact: t,
						checkPropTypes: o,
						resetWarningCache: r,
					};
					return (n.PropTypes = n), n;
				});
		},
		function (e, t, n) {
			'use strict';
			e.exports = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
		},
	]);
});
